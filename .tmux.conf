# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect' # For storing sessions
set -g @plugin 'tmux-plugins/tmux-continuum' # for automatic starting of saved sessions
set -g @plugin 'laktak/extrakto' # for finding and copying text from tmux panes

# Making sure tmux doesn't change terminal colors
set-option -sa terminal-overrides ",xterm*:Tc,*:clipboard:enable"

set -g mouse on
setw -g mode-keys vi
set -g status-interval 1
set -s set-clipboard on
set -g escape-time 0

# low escape time on ssh to avoid bugs
if-shell '[ -n "$SSH_CONNECTION" ]' 'set -g escape-time 10' ''

# increase from 500ms to 700ms for continous resizing on hold
set repeat-time 700

# resize with hjkl keys
bind-key -r -T prefix M-k resize-pane -U 5
bind-key -r -T prefix M-j resize-pane -D 5
bind-key -r -T prefix M-h resize-pane -L 5
bind-key -r -T prefix M-l resize-pane -R 5
bind-key -r -T prefix C-k resize-pane -U
bind-key -r -T prefix C-j resize-pane -D
bind-key -r -T prefix C-h resize-pane -L
bind-key -r -T prefix C-l resize-pane -R

# swap windows
bind-key H swap-window -t -1 \; select-window -t -1
bind-key L swap-window -t +1 \; select-window -t +1

# kill and start session
bind S command-prompt -p "New Session:" "new-session -A -s '%%'"
bind K confirm kill-session

# clear history
bind C clear-history

# Visual selection â€“ start/stop with v / V (line-wise)
bind  -T copy-mode-vi v send -X begin-selection

# Yank selection and leave copy-mode with y
bind  -T copy-mode-vi y send -X copy-selection-and-cancel

# more vimish copy-mode bindings (for vim text objects)
bind -T copy-mode-vi i switch-client -T copyModeMultiKey_i
bind -T copyModeMultiKey_i w send-keys -X select-word
bind -T copyModeMultiKey_i W send-keys -X clear-selection \; send-keys -X previous-space \; send-keys -X begin-selection \; send-keys -X next-space-end
bind -T copyModeMultiKey_i b send-keys -X clear-selection \; send-keys -X jump-to-backward '(' \; send-keys -X begin-selection \; send-keys -X jump-to-forward ')'
bind -T copyModeMultiKey_i ( send-keys -X clear-selection \; send-keys -X jump-to-backward '(' \; send-keys -X begin-selection \; send-keys -X jump-to-forward ')'
bind -T copyModeMultiKey_i ) send-keys -X clear-selection \; send-keys -X jump-to-backward '(' \; send-keys -X begin-selection \; send-keys -X jump-to-forward ')'
bind -T copyModeMultiKey_i B send-keys -X clear-selection \; send-keys -X jump-to-backward '{' \; send-keys -X begin-selection \; send-keys -X jump-to-forward '}'
bind -T copyModeMultiKey_i \{ send-keys -X clear-selection \; send-keys -X jump-to-backward '{' \; send-keys -X begin-selection \; send-keys -X jump-to-forward '}'
bind -T copyModeMultiKey_i \} send-keys -X clear-selection \; send-keys -X jump-to-backward '{' \; send-keys -X begin-selection \; send-keys -X jump-to-forward '}'
bind -T copyModeMultiKey_i [ send-keys -X clear-selection \; send-keys -X jump-to-backward '[' \; send-keys -X begin-selection \; send-keys -X jump-to-forward ']'
bind -T copyModeMultiKey_i ] send-keys -X clear-selection \; send-keys -X jump-to-backward '[' \; send-keys -X begin-selection \; send-keys -X jump-to-forward ']'
bind -T copyModeMultiKey_i < send-keys -X clear-selection \; send-keys -X jump-to-backward '<' \; send-keys -X begin-selection \; send-keys -X jump-to-forward '>'
bind -T copyModeMultiKey_i > send-keys -X clear-selection \; send-keys -X jump-to-backward '<' \; send-keys -X begin-selection \; send-keys -X jump-to-forward '>'
bind -T copyModeMultiKey_i ` send-keys -X clear-selection \; send-keys -X jump-to-backward '`' \; send-keys -X begin-selection \; send-keys -X jump-to-forward '`'
bind -T copyModeMultiKey_i \' send-keys -X clear-selection \; send-keys -X jump-to-backward "'" \; send-keys -X begin-selection \; send-keys -X jump-to-forward "'"
bind -T copyModeMultiKey_i \" send-keys -X clear-selection \; send-keys -X jump-to-backward '"' \; send-keys -X begin-selection \; send-keys -X jump-to-forward '"'
bind -T copyModeMultiKey_i l send-keys -X clear-selection \; send-keys -X back-to-indentation \; send-keys -X begin-selection \; send-keys -X end-of-line \; send-keys -X cursor-left \; send-keys -X other-end

# Window and pane numbering from 1
set -g base-index 1
setw -g pane-base-index 1

# Grey status bar (used in home)
set -g status-style "bg=#839496,fg=black"
set -g pane-active-border-style "fg=#52767a"

# Orange color bar (used for ssh)
if-shell '[ -n "$SSH_CONNECTION" ]' 'set -g status-style "bg=#FFA500,fg=black"; set -g pane-active-border-style "fg=#FFA500"' ''

# set-option -g default-shell /bin/zsh

set -g default-terminal "screen-256color"

# Increase scrollback buffer size from 2000 to 50000 lines
set -g history-limit 50000

# Increase tmux messages display duration from 750ms to 4s
set -g display-time 4000

# Starting new splits and windows at the current path
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Move between panes using vim-style keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Plugin settings
# Continuum settings
set -g @continuum-boot 'on' # start tmux server on boot
set -g @continuum-restore 'on' # automatically restore sessions on startup

# Extrakto settings
set -g @extrakto_grab_area "window 10000" # grab at most 10000 lines from the current window
if-shell '[ -n "$SSH_CONNECTION" ]' 'set -g @extrakto_grab_area "window 2000"' ''
set -g @extrakto_filter_order "all path url word quote s-quote line"
set -g @extrakto_copy_key "tab"      # use tab to copy to clipboard
set -g @extrakto_insert_key "enter"  # use enter to insert selection
set -g @extrakto_fzf_unset_default_opts "false"  # keep our custom FZF_DEFAULT_OPTS
set -g @extrakto_fzf_header "i c f g" # for small screens shorten the fzf header
set -g @extrakto_clip_tool_run "tmux_osc52" # for remote tmux

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
